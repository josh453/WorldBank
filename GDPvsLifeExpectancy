import pandas as pd
import numpy as np
import folium
import random
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display

data = pd.read_csv('~/Indicators.csv')
data.head()

#How many distinct countries, indicators, and years
print("The data has", data.shape[0], "rows and", data.shape[1], "columns.")
print("There are", len(set(data['CountryCode'])), "countries.")
print("There are", len(set(data['IndicatorCode'])), "indicators.")
print("There are", len(set(data['Year'])), "years.")

#Isolate indicator codes for life expectancy and GDP
gdp_cap = data['IndicatorCode'].str.contains('NY\.GDP\.PCAP\.KD$')
total_exp = data['IndicatorCode'].str.contains('SP\.DYN\.LE00\.IN$')

#Are the GDP and Life Expectancy data sets the same length?
gdp_stage = data[gdp_cap]
life_stage = data[total_exp]

#Let's check if there are any nulls
print(gdp_stage.isnull().any())
print(life_stage.isnull().any())

#Let's check how many years each data set contains
print("GDP Min Year =", gdp_stage['Year'].min(), "max:", gdp_stage['Year'].max())
print("Life Exp Min Year =", life_stage['Year'].min(), "max:", life_stage['Year'].max())

#Filter data to between 2000 and 2013
gdp_stage_trunc = gdp_stage[(gdp_stage['Year'] < 2014) & (gdp_stage['Year'] > 1999)]
print("GDP Min Year = ", gdp_stage_trunc['Year'].min(), "max: ", gdp_stage_trunc['Year'].max())
life_stage = life_stage[(life_stage['Year'] < 2014) & (life_stage['Year'] > 1999)]
print("Life Exp Min Year = ", life_stage['Year'].min(), "max: ", life_stage['Year'].max())

#Let's check the number of countries in each set
print(len(set(gdp_stage_trunc['CountryName'])))
print(len(set(life_stage['CountryName'])))

#Let's check all country differences between the two
print(np.setxor1d(gdp_stage_trunc['CountryName'],life_stage['CountryName']))

#Let's see which dataset has unique countries that the other does not contain
print("We have GDP information but not life expectancy for:", np.setdiff1d(gdp_stage_trunc['CountryName'],life_stage['CountryName']))
print("We have life expectancy information but not GDP for:", np.setdiff1d(life_stage['CountryName'],gdp_stage_trunc['CountryName']))

#Let's remove countries that do not intersect
life_stage_trunc = life_stage[~life_stage.CountryName.isin(np.setdiff1d(life_stage['CountryName'],gdp_stage_trunc['CountryName']))]
gdp_stage_trunc = gdp_stage_trunc[~gdp_stage_trunc.CountryName.isin(np.setdiff1d(gdp_stage_trunc['CountryName'],life_stage['CountryName']))]
print(np.setxor1d(gdp_stage_trunc['CountryName'],life_stage_trunc['CountryName']))

#Still not the same size, let's see if each country is represented the same number of times
newdf = gdp_stage_trunc.groupby(['CountryName'])['CountryCode'].count() - life_stage_trunc.groupby(['CountryName'])['CountryCode'].count()
newdf.iloc[newdf.nonzero()]

#Looks like some countries have data for years that the others do not, let's remove them from both dataframes
countriesrm = ['Afghanistan','Angola','Aruba','Channel Islands','Dominica','Eritrea','Faeroe Islands','Greenland','Isle of Man',
             'Liechtenstein', 'Maldives','Marshall Islands','Palau','San Marino','Seychelles','St. Kitts and Nevis','Syrian Arab Republic']
life_stage_trunc = life_stage_trunc[~life_stage_trunc.CountryName.isin(countriesrm)]
gdp_stage_trunc = gdp_stage_trunc[~gdp_stage_trunc.CountryName.isin(countriesrm)]

#Merge the dataframes and look at mean values across all years
df_merge = pd.merge(gdp_stage_trunc, life_stage_trunc,how = 'left', left_on = ['CountryName','Year'],right_on = ['CountryName','Year'])
df_merge.rename(columns={'Value_x':'GDPPC', 'Value_y':'Life Expectancy'}, inplace=True)

#Plot GDP Per Capita vs Life Expectancy
%matplotlib inline
fig, axis = plt.subplots(figsize = (20,10))
axis.yaxis.grid(True)
axis.set_title('Life Expectancy vs. GDP Per Capita',fontsize=14)
axis.set_ylabel(gdp_stage_trunc['IndicatorName'].iloc[0],fontsize=12)
axis.set_xlabel(life_stage['IndicatorName'].iloc[0],fontsize=12)
Y = gdp_stage_trunc['Value']
X = life_stage_trunc['Value']
plt.plot(np.unique(X), np.poly1d(np.polyfit(X, Y, 4))(np.unique(X)), '-r', linewidth = 4)
axis.scatter(X, Y, color = 'b')
plt.show()
df_merge.groupby(['CountryName'])['GDPPC', 'Life Expectancy'].mean()

#We can also select by year 
%matplotlib inline
choose_year = 2010
fig, axis = plt.subplots(figsize = (20,10))
axis.yaxis.grid(True)
axis.set_title('Life Expectancy vs. GDP Per Capita' + ' ' + str(choose_year),fontsize=14)
axis.set_ylabel(gdp_stage_trunc['IndicatorName'].iloc[0],fontsize=12)
axis.set_xlabel(life_stage['IndicatorName'].iloc[0],fontsize=12)
Y = gdp_stage_trunc.loc[gdp_stage_trunc['Year'] == choose_year, 'Value']
X = life_stage_trunc.loc[life_stage_trunc['Year'] == choose_year, 'Value']
plt.plot(np.unique(X), np.poly1d(np.polyfit(X, Y, 4))(np.unique(X)), '-r', linewidth = 4)
axis.scatter(X, Y, color = 'b')
plt.show()
